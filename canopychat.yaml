# For more information, see the Configuration Guide:
# https://www.canopystudio.io/docs/configuration/canopychat_yaml

# ===================== Core =====================
# Configuration version (required)
version: 1.2.1

# Cache settings: Set to true to enable caching
cache: true

# File strategy s3/firebase
fileStrategy: "s3"

# ===================== Interface =====================
# Custom interface configuration
interface:
  customWelcome: "Welcome to CanopyChat! Enjoy your experience."
  # MCP Servers UI configuration
  mcpServers:
    placeholder: 'MCP Servers'
  # Enable/disable file search as a chatarea selection (default: true)
  # Note: This setting does not disable the Agents File Search Capability.
  # To disable the Agents Capability, see the Agents Endpoint configuration instead.
  fileSearch: true
  # Privacy policy settings
  privacyPolicy:
    externalUrl: 'https://canopystudio.io/'
    openNewTab: true

  # Terms of service
  termsOfService:
    externalUrl: 'https://canopystudio.io/'
    openNewTab: true
    modalAcceptance: true
    modalTitle: "Terms of Service for CanopyChat"
    modalContent: |
      # Terms and Conditions for CanopyChat

      *Effective Date: August 2, 2025*

      Welcome to CanopyChat, the informational website for the open-source AI chat platform, available at https://canopystudio.io. These Terms of Service ("Terms") govern your use of our website and the services we offer. By accessing or using the Website, you agree to be bound by these Terms and our Privacy Policy, accessible at https://canopystudio.io/privacy.

      ## 1. Ownership

      Upon purchasing a package from CanopyChat, you are granted the right to download and use the code for accessing an admin panel for CanopyChat. While you own the downloaded code, you are expressly prohibited from reselling, redistributing, or otherwise transferring the code to third parties without explicit permission from CanopyChat.

      ## 2. User Data

      We collect personal data, such as your name, email address, and payment information, as described in our Privacy Policy. This information is collected to provide and improve our services, process transactions, and communicate with you.

      ## 3. Non-Personal Data Collection

      The Website uses cookies to enhance user experience, analyze site usage, and facilitate certain functionalities. By using the Website, you consent to the use of cookies in accordance with our Privacy Policy.

      ## 4. Use of the Website

      You agree to use the Website only for lawful purposes and in a manner that does not infringe the rights of, restrict, or inhibit anyone else's use and enjoyment of the Website. Prohibited behavior includes harassing or causing distress or inconvenience to any person, transmitting obscene or offensive content, or disrupting the normal flow of dialogue within the Website.

      ## 5. Governing Law

      These Terms shall be governed by and construed in accordance with the laws of the United States, without giving effect to any principles of conflicts of law.

      ## 6. Changes to the Terms

      We reserve the right to modify these Terms at any time. We will notify users of any changes by email. Your continued use of the Website after such changes have been notified will constitute your consent to such changes.

      ## 7. Contact Information

      If you have any questions about these Terms, please contact us at contact@canopystudio.io.

      By using the Website, you acknowledge that you have read these Terms of Service and agree to be bound by them.

  endpointsMenu: true
  modelSelect: true
  modelSelectHeader: false
  modelSelectChat: true
  parameters: false
  sidePanel: true
  presets: false
  prompts: false
  bookmarks: false
  multiConvo: false
  agents: true
  # Temporary chat retention period in hours (default: 720, min: 1, max: 8760)
  # temporaryChatRetention: 1

# ===================== Security (optional) =====================
# Example Cloudflare turnstile (optional)
#turnstile:
#  siteKey: "your-site-key-here"
#  options:
#    language: "auto"    # "auto" or an ISO 639-1 language code (e.g. en)
#    size: "normal"      # Options: "normal", "compact", "flexible", or "invisible"

# ===================== Registration =====================
# Example Registration Object Structure (optional)
registration:
  socialLogins: ['github', 'google', 'discord', 'openid', 'facebook', 'apple', 'saml']
  # allowedDomains:
  # - "gmail.com"


# ===================== Balance (optional) =====================
# Example Balance settings
# balance:
#   enabled: false
#   startBalance: 20000
#   autoRefillEnabled: false
#   refillIntervalValue: 30
#   refillIntervalUnit: 'days'
#   refillAmount: 10000

# ===================== Speech =====================
speech:
  tts:
    openai:
      url: 'https://api.openai.com/v1/audio/speech'
      apiKey: '${OPENAI_API_KEY}'
      model: 'tts-1'
      voices: ['alloy', 'echo', 'fable', 'onyx', 'nova', 'shimmer']
  stt:
    openai:
      url: 'https://audio-prod.us-virginia-1.direct.fireworks.ai/v1/audio/transcriptions'
      apiKey: '${FIREWORKS_API_KEY}'
      model: 'whisper-v3'
  speechTab:
    speechToText:
      engineSTT: "external"

# ===================== Transcript Prompts =====================
# AI prompts for transcript editing and canvas operations
transcriptPrompts:
  enabled: true
  
  backend:
    editing:
      system: |
        You are a precise transcript editor following the General STT Cleaning Workflow. Your goal is to preserve the speaker's meaning, voice, and ORIGINAL LANGUAGE while fixing clarity, structure, and basic language issues ‚Äî without rewriting or reinterpreting.

        üßº GENERAL STT CLEANING WORKFLOW:

        0. PRESERVE ORIGINAL LANGUAGE
        - Keep the SAME language as the input transcript (French, English, Spanish, etc.)
        - Do not translate or change the language
        - Maintain the speaker's natural linguistic patterns and expressions
        - Preserve cultural and regional language nuances

        1. REMOVE FILLER WORDS
        Clean out obvious verbal fillers that don't add value:
        - Remove: uh, um, ah, ok, you know, like, so..., repeated "yeah"
        - ‚úÖ Keep if part of intentional emphasis or emotional tone
        - ‚úÇÔ∏è Remove when it's just noise between thoughts

        2. CORRECT BASIC GRAMMAR (LIGHT TOUCH)
        Make text readable without rewording ideas. Fix only obvious issues:
        - Verb agreement (e.g., "it work" ‚Üí "it works")
        - Missing small words (e.g., "hope it work" ‚Üí "hope it will work")
        - Wrong tenses or forms (e.g., "want to do a functionality" ‚Üí "want to implement a functionality")
        üß† Rule: Only fix things that would confuse a reader or clearly break the sentence. Don't rewrite for style.

        3. RESPECT NATURAL PARAGRAPHS AND STRUCTURE
        If speaker uses cues like "First point...", "In paragraph two...", "Next section..." ‚Üí Break the transcript accordingly using line breaks and/or titles.
        Don't interpret structure ‚Äî just follow what's explicit in the transcript.

        4. EXTRACT TITLES AND HEADINGS CLEANLY
        If speaker gives a title, format it directly and strip framing phrases like "the title is...", "we call this...", "for paragraph 1..."
        ‚úÖ Good: **Clients / Number 1**
        ‚ùå Avoid: For paragraph one, the title is Clients / Number 1...
        Titles should appear alone, with exact phrasing, not embedded in a sentence.

        5. PRESERVE INTENT AND VOCABULARY
        - Keep the same wording unless it's unclear or broken
        - Do not replace speaker vocabulary with synonyms or rewrite to sound "better"
        - Avoid adding ideas, conclusions, or structure that the speaker didn't provide
        üö´ Don't change tone. If they repeat themselves or use vague words, keep them unless clearly accidental.

        6. MINIMAL FORMATTING
        Apply basic formatting:
        - Bold or separate paragraph titles
        - Clear paragraph breaks
        - Bullet points only if clearly suggested in speech

        7. LEAVE TIMING, SPEAKER LABELS, OR CONTEXT NOTES OUT
        Don't add timestamps, speaker names, or interpretation notes unless specifically asked.

        8. OUTPUT FORMAT
        Output HTML only using: h1‚Äìh3, p, ul, ol, li, strong, em, u, code, pre, blockquote, a, br.
        Rules:
        - No <p> inside <li>.
        - Use lists for bullets; do not simulate bullets with dashes.
        - At most one <br> where a semantic line break is required; otherwise rely on block elements.
        - No empty <p>, <li>, or headings.
        - Links must be https:// or mailto:; no inline styles, data: URLs, or event handlers.
        - Do not use any other tags or attributes.
        - Do not include Markdown, code fences, or outer <html>/<body> wrappers.

        Return the transcript following these rules with no additional commentary.
      user: |
        Original transcript:
        {rawTranscript}

        User editing request: "{userEditRequest}"

        Apply ONLY the requested changes while preserving everything else exactly as spoken. Return the minimally edited transcript.{htmlInstruction}
    
    summary:
      system: |
        You are an expert transcript summarizer. Create a comprehensive summary that captures the essence of the original transcript while preserving the speaker's language and terminology.

        üìã SUMMARY GUIDELINES:

        1. PRESERVE ORIGINAL LANGUAGE
        - Use the SAME language as the input transcript (French, English, Spanish, etc.)
        - Keep the speaker's specific terminology and vocabulary
        - Maintain any technical terms, proper nouns, or specialized language
        - Do not translate or change the language

        2. CAPTURE KEY CONTENT
        - Main topics and themes discussed
        - Important decisions or conclusions
        - Key insights and observations
        - Specific details that matter to the context

        3. STRUCTURE CLEARLY
        - Use clear headings and sections
        - Organize by topics or chronological flow
        - Use bullet points for lists when appropriate
        - Make it scannable and easy to read

        4. MAINTAIN SPEAKER'S VOICE
        - Preserve the tone and style of communication
        - Keep important phrases and expressions as spoken
        - Reflect the speaker's priorities and emphasis
        - Don't impose formal academic language if speaker was casual

        5. FOCUS ON ACTIONABLE CONTENT
        - Highlight decisions made
        - Extract next steps or plans
        - Note requirements or specifications
        - Identify problems and proposed solutions

        6. BE CONCISE BUT COMPREHENSIVE
        - Cover all important points without redundancy
        - Eliminate filler but preserve substance
        - Aim for 20-30% of original length
        - Don't lose critical nuances

        7. OUTPUT FORMAT
        Output HTML only using: h1‚Äìh3, p, ul, ol, li, strong, em, u, code, pre, blockquote, a, br.
        Rules:
        - No <p> inside <li>.
        - Use lists for bullets; do not simulate bullets with dashes.
        - At most one <br> where a semantic line break is required; otherwise rely on block elements.
        - No empty <p>, <li>, or headings.
        - Links must be https:// or mailto:; no inline styles, data: URLs, or event handlers.
        - Do not use any other tags or attributes.
        - Do not include Markdown, code fences, or outer <html>/<body> wrappers.

        Return the summary following these guidelines with no additional commentary.

      user: |
        Transcript to summarize:
        {transcript}

        Create a comprehensive summary highlighting key points, decisions, and action items.{htmlInstruction}
    
    actionPoints:
      system: |
        You are an expert at extracting actionable items from transcripts. Create a clear, organized list of action points while preserving the speaker's original language and terminology.

        üéØ ACTION POINTS GUIDELINES:

        1. PRESERVE ORIGINAL LANGUAGE
        - Use the SAME language as the input transcript (French, English, Spanish, etc.)
        - Keep the speaker's specific terminology and phrasing
        - Maintain technical terms, project names, and specialized vocabulary
        - Do not translate or change the language

        2. EXTRACT ACTIONABLE ITEMS
        - Specific tasks that need to be completed
        - Decisions that require follow-up
        - Features or functionality to implement
        - Changes or modifications to make
        - Next steps or follow-up actions
        - Requirements or specifications to fulfill

        3. INCLUDE CONTEXT AND DETAILS
        - Who is responsible (when mentioned)
        - Deadlines or timeframes (when specified)
        - Priority levels (when indicated)
        - Dependencies between tasks
        - Specific parameters or requirements

        4. ORGANIZE CLEARLY
        - Group related actions together
        - Use clear, actionable bullet points
        - Start each point with an action verb
        - Number items when sequence matters
        - Use sub-bullets for details when needed

        5. MAINTAIN SPEAKER'S INTENT
        - Preserve the speaker's priorities and emphasis
        - Keep the original context and reasoning
        - Don't add assumptions or interpretations
        - Reflect the speaker's urgency or importance indicators

        6. FORMAT FOR CLARITY
        - Use consistent formatting
        - Make items scannable and easy to follow
        - Include relevant details without being verbose
        - Ensure each point is self-contained and clear

        7. OUTPUT FORMAT
        Output HTML only using: h1‚Äìh3, p, ul, ol, li, strong, em, u, code, pre, blockquote, a, br.
        Rules:
        - No <p> inside <li>.
        - Use lists for bullets; do not simulate bullets with dashes.
        - At most one <br> where a semantic line break is required; otherwise rely on block elements.
        - No empty <p>, <li>, or headings.
        - Links must be https:// or mailto:; no inline styles, data: URLs, or event handlers.
        - Do not use any other tags or attributes.
        - Do not include Markdown, code fences, or outer <html>/<body> wrappers.

        Return the action points following these guidelines with no additional commentary.
      user: |
        Transcript to extract action points from:
        {transcript}

        Extract all actionable items, tasks, and follow-up actions from this transcript.{htmlInstruction}
    
    dictation:
      system: |
        ROLE: You precisely edit transcripts according to an initial instruction block spoken at the start, followed by the full transcript body.

        RULES:
        0) ANALYSIS FIRST: Identify the requested edits contained in the initial instruction block before editing the transcript body.
        1) Remove the instruction block entirely from the output.
        2) Apply ONLY the requested edits to the transcript body; keep everything else unchanged.
        3) Preserve the original language, terminology, order, and structure of the transcript body.
        4) Do not summarize, compress, or omit content from the transcript body beyond the explicit requested edits.
        5) The output should be close in length to the transcript body (minus the removed instruction block).
        6) STRICT MINIMAL CHANGE POLICY: Do not alter any wording, punctuation, capitalization, whitespace, line breaks, or formatting outside the exact spans needed to implement the requested edits. No rephrasing. No style improvements. No extra grammar fixes unless explicitly requested.

        OUTPUT:
        Output HTML only using: h1‚Äìh3, p, ul, ol, li, strong, em, u, code, pre, blockquote, a, br.
        Rules:
        - No <p> inside <li>.
        - Use lists for bullets; do not simulate bullets with dashes.
        - At most one <br> where a semantic line break is required; otherwise rely on block elements.
        - No empty <p>, <li>, or headings.
        - Links must be https:// or mailto:; no inline styles, data: URLs, or event handlers.
        - Do not use any other tags or attributes.
        - Do not include Markdown, code fences, or outer <html>/<body> wrappers.
        - Wrap the final edited transcript between the markers exactly:
          <<<OUTPUT_START>>>
          ...final edited transcript...
          <<<OUTPUT_END>>>
      user: |
        This dictation begins with an instruction block from the speaker, then the full transcript body.

        Your task:
        - First, analyze and determine the requested edits from the initial instruction block.
        - Then, follow ONLY those requested edits.
        - Remove the instruction block completely from the output.
        - Apply the requested edits to the transcript body, preserving original language, order, and structure.
        - Do NOT summarize or omit content from the transcript body beyond the requested edits.
        - STRICT MINIMAL CHANGE: Do not alter wording, punctuation, capitalization, whitespace, line breaks, or formatting outside the exact spans that must change to implement the request. No rephrasing or grammar cleanup unless explicitly requested.{htmlInstruction}

        Return ONLY the final edited transcript, wrapped as:
        <<<OUTPUT_START>>>
        [final edited transcript]
        <<<OUTPUT_END>>>

        Raw transcription input:
        {transcript}
  
  canvas:
    suggestEdits: "Suggest improvements for the following text, focusing on clarity, grammar, and style."
    adjustLengthShorter: "Make the following text more concise while preserving key information."
    adjustLengthLonger: "Expand the following text with more detail and context."
    finalPolish: "Polish this text by fixing grammar, improving clarity, and ensuring professional tone."
    formatDocument: "Format the following transcript into a well-structured document."
  
  htmlInstruction: |
    
    IMPORTANT: Output HTML only using: h1‚Äìh3, p, ul, ol, li, strong, em, u, code, pre, blockquote, a, br.

    Rules:
    - No <p> inside <li>.
    - Use lists for bullets; do not simulate bullets with dashes.
    - At most one <br> where a semantic line break is required; otherwise rely on block elements.
    - No empty <p>, <li>, or headings.
    - Links must be https:// or mailto:; no inline styles, data: URLs, or event handlers.
    - Do not use any other tags or attributes.
    - Do not include Markdown, code fences, or outer <html>/<body> wrappers.

# ===================== Rate Limits (optional) =====================
# rateLimits:
#   fileUploads:
#     ipMax: 100
#     ipWindowInMinutes: 60  # Rate limit window for file uploads per IP
#     userMax: 50
#     userWindowInMinutes: 60  # Rate limit window for file uploads per user
#   conversationsImport:
#     ipMax: 100
#     ipWindowInMinutes: 60  # Rate limit window for conversation imports per IP
#     userMax: 50
#     userWindowInMinutes: 60  # Rate limit window for conversation imports per user

# ===================== Actions =====================
# Example Actions Object Structure
actions:
  allowedDomains:
    - "swapi.dev"
    - "canopystudio.io"
    - "google.com"

# ===================== MCP Servers (optional examples) =====================
# Example MCP Servers Object Structure
# mcpServers:
#   everything:
#     # type: sse # type can optionally be omitted
#     url: http://localhost:3001/sse
#     timeout: 60000  # 1 minute timeout for this server, this is the default timeout for MCP servers.
#   puppeteer:
#     type: stdio
#     command: npx
#     args:
#       - -y
#       - "@modelcontextprotocol/server-puppeteer"
#     timeout: 300000  # 5 minutes timeout for this server
#   filesystem:
#     # type: stdio
#     command: npx
#     args:
#       - -y
#       - "@modelcontextprotocol/server-filesystem"
#       - /home/user/CanopyChat/
#     iconPath: /home/user/CanopyChat/client/public/assets/logo.svg
#   mcp-obsidian:
#     command: npx
#     args:
#       - -y
#       - "mcp-obsidian"
#       - /path/to/obsidian/vault

# ===================== Endpoints =====================
# Definition of custom endpoints
endpoints:
  # Enable default endpoints - you can add specific configurations here
  openAI:
    # This enables the OpenAI endpoint with default settings
    # You can add API key and other configurations as needed
    titleModel: "gpt-3.5-turbo"
  # assistants:
  #   disableBuilder: false # Disable Assistants Builder Interface by setting to `true`
  #   pollIntervalMs: 3000  # Polling interval for checking assistant updates
  #   timeoutMs: 180000  # Timeout for assistant operations
  #   # Should only be one or the other, either `supportedIds` or `excludedIds`
  #   supportedIds: ["asst_supportedAssistantId1", "asst_supportedAssistantId2"]
  #   # excludedIds: ["asst_excludedAssistantId"]
  #   # Only show assistants that the user created or that were created externally (e.g. in Assistants playground).
  #   # privateAssistants: false # Does not work with `supportedIds` or `excludedIds`
  #   # (optional) Models that support retrieval, will default to latest known OpenAI models that support the feature
  #   retrievalModels: ["gpt-4-turbo-preview"]
  #   # (optional) Assistant Capabilities available to all users. Omit the ones you wish to exclude. Defaults to list below.
  #   capabilities: ["code_interpreter", "retrieval", "actions", "tools", "image_vision"]
  # agents:
  #   # (optional) Default recursion depth for agents, defaults to 25
  #   recursionLimit: 50
  #   # (optional) Max recursion depth for agents, defaults to 25
  #   maxRecursionLimit: 100
  #   # (optional) Disable the builder interface for agents
  #   disableBuilder: false
  #   # (optional) Agent Capabilities available to all users. Omit the ones you wish to exclude. Defaults to list below.
  #   capabilities: ["execute_code", "file_search", "actions", "tools"]
  # custom:
    # Groq Example
    # - name: 'groq'
    #   apiKey: '${GROQ_API_KEY}'
    #   baseURL: 'https://api.groq.com/openai/v1/'
    #   models:
    #     default:
    #       [
    #         'llama3-70b-8192',
    #         'llama3-8b-8192',
    #         'llama2-70b-4096',
    #         'mixtral-8x7b-32768',
    #         'gemma-7b-it',
    #       ]
    #     fetch: false
    #   titleConvo: true
    #   titleModel: 'mixtral-8x7b-32768'
    #   modelDisplayLabel: 'groq'

    # Mistral AI Example
    # - name: 'Mistral' # Unique name for the endpoint
      # For `apiKey` and `baseURL`, you can use environment variables that you define.
      # recommended environment variables:
      # apiKey: '${MISTRAL_API_KEY}'
      # baseURL: 'https://api.mistral.ai/v1'

      # Models configuration
      # models:
        # List of default models to use. At least one value is required.
        # default: ['mistral-tiny', 'mistral-small', 'mistral-medium']
        # Fetch option: Set to true to fetch models from API.
        # fetch: true # Defaults to false.

      # Optional configurations

      # Title Conversation setting
      # titleConvo: true # Set to true to enable title conversation

      # Title Method: Choose between "completion" or "functions".
      # titleMethod: "completion"  # Defaults to "completion" if omitted.

      # Title Model: Specify the model to use for titles.
      # titleModel: 'mistral-tiny' # Defaults to "gpt-3.5-turbo" if omitted.

      # Summarize setting: Set to true to enable summarization.
      # summarize: false

      # Summary Model: Specify the model to use if summarization is enabled.
      # summaryModel: "mistral-tiny"  # Defaults to "gpt-3.5-turbo" if omitted.

      # Force Prompt setting: If true, sends a `prompt` parameter instead of `messages`.
      # forcePrompt: false

      # The label displayed for the AI model in messages.
      # modelDisplayLabel: 'Mistral' # Default is "AI" when not set.

      # Add additional parameters to the request. Default params will be overwritten.
      # addParams:
      # safe_prompt: true # This field is specific to Mistral AI: https://docs.mistral.ai/api/

      # Drop Default params parameters from the request. See default params in guide linked below.
      # NOTE: For Mistral, it is necessary to drop the following parameters or you will encounter a 422 Error:
      # dropParams: ['stop', 'user', 'frequency_penalty', 'presence_penalty']

    # OpenRouter Example
    # - name: 'OpenRouter'
      # For `apiKey` and `baseURL`, you can use environment variables that you define.
      # recommended environment variables:
      # apiKey: '${OPENROUTER_KEY}'
      # baseURL: 'https://openrouter.ai/api/v1'
      # models:
        # default: ['meta-llama/llama-3-70b-instruct']
        # fetch: true
      # titleConvo: true
      # titleModel: 'meta-llama/llama-3-70b-instruct'
      # Recommended: Drop the stop parameter from the request as Openrouter models use a variety of stop tokens.
      # dropParams: ['stop']
      # modelDisplayLabel: 'OpenRouter'

    # Portkey AI Example
    # - name: "Portkey"
      # apiKey: "dummy"
      # baseURL: 'https://api.portkey.ai/v1'
      # headers:
          # x-portkey-api-key: '${PORTKEY_API_KEY}'
          # x-portkey-virtual-key: '${PORTKEY_OPENAI_VIRTUAL_KEY}'
      # models:
          # default: ['gpt-4o-mini', 'gpt-4o', 'chatgpt-4o-latest']
          # fetch: true
      # titleConvo: true
      # titleModel: 'current_model'
      # summarize: false
      # summaryModel: 'current_model'
      # forcePrompt: false
      # modelDisplayLabel: 'Portkey'
# iconURL: https://images.crunchbase.com/image/upload/c_pad,f_auto,q_auto:eco,dpr_1/rjqy7ghvjoiu4cd1xjbf
# ===================== File Configuration =====================
fileConfig:
  endpoints:
    assistants:
      fileLimit: 5
      fileSizeLimit: 10  # Maximum size for an individual file in MB
      totalSizeLimit: 50  # Maximum total size for all files in a single request in MB
      supportedMimeTypes:
        - "image/.*"
        - "application/pdf"
    openAI:
      disabled: false  # Enable file uploading to the OpenAI endpoint for GPT-4o vision
      fileLimit: 10
      fileSizeLimit: 50  # Maximum size for an individual file in MB
      totalSizeLimit: 100  # Maximum total size for all files in a single request in MB
      supportedMimeTypes:
        - "image/.*"
        - "application/pdf"
        - "^audio/(mp3|mpeg|wav|x-wav|m4a|x-m4a|mp4|ogg|flac|webm)$"
        - "text/.*"
    default:
      totalSizeLimit: 20
  serverFileSizeLimit: 100  # Global server file size limit in MB
  avatarSizeLimit: 2  # Limit for user avatar image size in MB
#   imageGeneration: # Image Gen settings, either percentage or px
#     percentage: 100
#     px: 1024
#   # Client-side image resizing to prevent upload errors
#   clientImageResize:
#     enabled: false  # Enable/disable client-side image resizing (default: false)
#     maxWidth: 1900  # Maximum width for resized images (default: 1900)
#     maxHeight: 1900  # Maximum height for resized images (default: 1900)
#     quality: 0.92  # JPEG quality for compression (0.0-1.0, default: 0.92)
# # See the Custom Configuration Guide for more information on Assistants Config:
# # https://www.canopystudio.io/docs/configuration/canopychat_yaml/object_structure/assistants_endpoint

# ===================== Memory =====================
# Memory configuration for user memories
memory:
  # (optional) Disable memory functionality
  disabled: true
#   # (optional) Restrict memory keys to specific values to limit memory storage and improve consistency
#   validKeys: ["preferences", "work_info", "personal_info", "skills", "interests", "context"]
#   # (optional) Maximum token limit for memory storage (not yet implemented for token counting)
#   tokenLimit: 10000
#   # (optional) Enable personalization features (defaults to true if memory is configured)
#   # When false, users will not see the Personalization tab in settings
#   personalize: true
#   # Memory agent configuration - either use an existing agent by ID or define inline
#   agent:
#     # Option 1: Use existing agent by ID
#     id: "your-memory-agent-id"
#     # Option 2: Define agent inline
#     # provider: "openai"
#     # model: "gpt-4o-mini"
#     # instructions: "You are a memory management assistant. Store and manage user information accurately."
#     # model_parameters:
#     #   temperature: 0.1

# ===================== Web Search =====================
webSearch:
  # Search Provider Configuration
  serperApiKey: "${SERPER_API_KEY}"
  searchProvider: "serper" # Options: "serper", "searxng"
 
  # Scraper Configuration
  firecrawlApiKey: "${FIRECRAWL_API_KEY}"
  firecrawlApiUrl: "${FIRECRAWL_API_URL}"
  scraperType: "firecrawl" # Changed from "firecrawl" to "serper" for better reliability
 
  # Reranker Configuration
  jinaApiKey: "${JINA_API_KEY}"
  cohereApiKey: "${COHERE_API_KEY}"
  rerankerType: "jina" # Options: "jina", "cohere"
 
  # General Settings
  scraperTimeout: 15000 # Increased from 7500ms to 15000ms for slower sites
  safeSearch: 1 # Options: 0 (OFF), 1 (MODERATE - default), 2 (STRICT)
